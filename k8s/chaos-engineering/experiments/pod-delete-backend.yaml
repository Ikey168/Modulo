apiVersion: litmuschaos.io/v1alpha1
kind: ChaosExperiment
metadata:
  name: pod-delete
  namespace: modulo-chaos
  labels:
    name: pod-delete
    app.kubernetes.io/part-of: litmus
    app.kubernetes.io/component: chaosexperiment
    app.kubernetes.io/version: 3.8.0
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["create","delete","get","list","patch","update", "deletecollection"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["create","get","list","patch","update"]
      - apiGroups: [""]
        resources: ["configmaps"]
        verbs: ["get","list"]
      - apiGroups: [""]
        resources: ["pods/log"]
        verbs: ["get","list","watch"]
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: ["get","list","create"]
      - apiGroups: ["apps"]
        resources: ["deployments","statefulsets","replicasets","daemonsets"]
        verbs: ["list","get"]
      - apiGroups: [""]
        resources: ["replicationcontrollers"]
        verbs: ["get","list"]
      - apiGroups: ["argoproj.io"]
        resources: ["rollouts"]
        verbs: ["list","get"]
      - apiGroups: ["batch"]
        resources: ["jobs"]
        verbs: ["create","list","get","delete","deletecollection"]
      - apiGroups: ["litmuschaos.io"]
        resources: ["chaosengines","chaosexperiments","chaosresults"]
        verbs: ["create","list","get","patch","update","delete"]
    image: "litmuschaos/go-runner:3.8.0"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name pod-delete
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '15'
    - name: RAMP_TIME
      value: ''
    - name: FORCE
      value: 'true'
    - name: CHAOS_INTERVAL
      value: '5'
    - name: PODS_AFFECTED_PERC
      value: ''
    - name: TARGET_CONTAINER
      value: ''
    - name: TARGET_PODS
      value: ''
    - name: DEFAULT_HEALTH_CHECK
      value: 'false'
    - name: NODE_LABEL
      value: ''
    - name: SEQUENCE
      value: 'parallel'
    labels:
      name: pod-delete
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/version: 3.8.0
---
apiVersion: litmuschaos.io/v1alpha1
kind: ChaosEngine
metadata:
  name: backend-pod-delete
  namespace: modulo-chaos
  labels:
    experiment: pod-delete
    app.kubernetes.io/name: modulo-chaos
    app.kubernetes.io/component: backend-chaos
spec:
  engineState: 'active'
  appinfo:
    appns: 'modulo'
    applabel: 'app=modulo-backend'
    appkind: 'deployment'
  chaosServiceAccount: modulo-chaos-sa
  experiments:
  - name: pod-delete
    spec:
      components:
        env:
        # Duration for which chaos is injected
        - name: TOTAL_CHAOS_DURATION
          value: '30'
        # Time period to wait before and after injection of chaos in sec
        - name: RAMP_TIME
          value: '10'
        # Force deletion of pods
        - name: FORCE
          value: 'false'
        # Interval between successive instance termination in sec
        - name: CHAOS_INTERVAL
          value: '10'
        # Percentage of total pods to delete
        - name: PODS_AFFECTED_PERC
          value: '50'
        # Sequence of chaos execution for multiple target pods
        - name: SEQUENCE
          value: 'parallel'
      probe:
      - name: "check-backend-health"
        type: "httpProbe"
        mode: "Continuous"
        runProperties:
          probeTimeout: 10
          retry: 3
          interval: 5
          probePollingInterval: 2
        httpProbe/inputs:
          url: "http://modulo-backend-service.modulo.svc.cluster.local:8080/api/actuator/health"
          insecureSkipTLS: false
          method:
            get:
              criteria: "=="
              responseCode: "200"
      - name: "check-frontend-availability"
        type: "httpProbe"
        mode: "Continuous"
        runProperties:
          probeTimeout: 10
          retry: 3
          interval: 5
        httpProbe/inputs:
          url: "http://modulo-frontend-service.modulo.svc.cluster.local/health"
          insecureSkipTLS: false
          method:
            get:
              criteria: "=="
              responseCode: "200"
  annotationCheck: 'true'
  jobCleanUpPolicy: 'retain'
