# Database secrets from Azure Key Vault
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-database-secret
  namespace: modulo
  labels:
    app.kubernetes.io/name: api-database-secret
    app.kubernetes.io/component: database-credentials
spec:
  refreshInterval: 5m  # Refresh every 5 minutes
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: api-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        DATABASE_URL: "jdbc:postgresql://{{ .database_host }}:{{ .database_port }}/{{ .database_name }}"
        DATABASE_USERNAME: "{{ .database_username }}"
        DATABASE_PASSWORD: "{{ .database_password }}"
  data:
  - secretKey: database_host
    remoteRef:
      key: modulo-database-host
  - secretKey: database_port
    remoteRef:
      key: modulo-database-port
  - secretKey: database_name
    remoteRef:
      key: modulo-database-name
  - secretKey: database_username
    remoteRef:
      key: modulo-database-username
  - secretKey: database_password
    remoteRef:
      key: modulo-database-password

---
# Application Insights secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: app-insights-external-secret
  namespace: modulo
  labels:
    app.kubernetes.io/name: app-insights-external-secret
    app.kubernetes.io/component: monitoring-credentials
spec:
  refreshInterval: 15m  # Refresh every 15 minutes (less frequent for monitoring)
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: app-insights-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        connection-string: "{{ .connection_string }}"
        instrumentation-key: "{{ .instrumentation_key }}"
  data:
  - secretKey: connection_string
    remoteRef:
      key: modulo-app-insights-connection-string
  - secretKey: instrumentation_key
    remoteRef:
      key: modulo-app-insights-instrumentation-key

---
# Azure Container Registry secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: acr-external-secret
  namespace: modulo
  labels:
    app.kubernetes.io/name: acr-external-secret
    app.kubernetes.io/component: registry-credentials
spec:
  refreshInterval: 30m  # Refresh every 30 minutes
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: acr-secret
    creationPolicy: Owner
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: |
          {
            "auths": {
              "{{ .registry_url }}": {
                "username": "{{ .registry_username }}",
                "password": "{{ .registry_password }}",
                "auth": "{{ printf "%s:%s" .registry_username .registry_password | b64enc }}"
              }
            }
          }
  data:
  - secretKey: registry_url
    remoteRef:
      key: modulo-acr-url
  - secretKey: registry_username
    remoteRef:
      key: modulo-acr-username
  - secretKey: registry_password
    remoteRef:
      key: modulo-acr-password

---
# JWT and API secrets
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: api-application-secret
  namespace: modulo
  labels:
    app.kubernetes.io/name: api-application-secret
    app.kubernetes.io/component: application-credentials
spec:
  refreshInterval: 10m  # Refresh every 10 minutes
  secretStoreRef:
    name: azure-keyvault-store
    kind: SecretStore
  target:
    name: api-application-secret
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        JWT_SECRET: "{{ .jwt_secret }}"
        API_KEY: "{{ .api_key }}"
        ENCRYPTION_KEY: "{{ .encryption_key }}"
  data:
  - secretKey: jwt_secret
    remoteRef:
      key: modulo-jwt-secret
  - secretKey: api_key
    remoteRef:
      key: modulo-api-key
  - secretKey: encryption_key
    remoteRef:
      key: modulo-encryption-key
