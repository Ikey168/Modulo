server:
  port: 8080
  servlet:
    context-path: /api

# Management and actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true

spring:
  datasource:
    url: jdbc:h2:mem:modulodb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  h2:
    console:
      enabled: true
      path: /h2-console
  neo4j:
    uri: bolt://localhost:7687
    authentication:
      username: neo4j
      password: test

# gRPC Server Configuration
grpc:
  server:
    port: 9090
    enable-reflection: true

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui
    operations-sorter: method

# Modulo application-specific configuration
modulo:
  security:
    jwt-secret: dGVzdC1qd3Qtc2VjcmV0LWZvci12YWxpZGF0aW9uLXRlc3RpbmctMTIzNDU2Nzg5MA==
    jwt-expiration-seconds: 3600
    api-key: mod_abcdef1234567890
    encryption-key: test-encryption-key
    enable-csrf: true
    enable-cors: true
    max-login-attempts: 3
    account-lockout-duration-seconds: 900
  features:
    enable-blockchain: true
    enable-websockets: true
    enable-grpc: true
    enable-offline-mode: true
    enable-plugin-system: true
    enable-file-upload: true
    enable-search: true
    enable-notifications: true
  performance:
    max-file-size-mb: 10
    thread-pool-size: 10
    request-timeout-ms: 30000
    cache-size: 1000
    cache-ttl-seconds: 3600
  integrations:
    blockchain:
      network: localhost
      rpc-url: http://localhost:8545
      gas-limit: 8000000
      gas-price-wei: 20000000000
    ipfs:
      node-url: http://localhost:5001
      gateway-url: http://localhost:8080
      enabled: true
      timeout-ms: 30000
      max-file-size-mb: 50
    external:
      api-timeout-ms: 10000
      max-retries: 3
      retry-delay-ms: 2000

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  h2:
    console:
      enabled: false
  neo4j:
    uri: bolt://neo4j:7687
    authentication:
      username: neo4j
      password: test

# Management and actuator configuration for docker profile
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true

grpc:
  server:
    port: 9090
    enable-reflection: true

# Modulo application-specific configuration for docker profile
modulo:
  security:
    jwt-secret: ${MODULO_JWT_SECRET:dGVzdC1qd3Qtc2VjcmV0LWZvci12YWxpZGF0aW9uLXRlc3RpbmctMTIzNDU2Nzg5MA==}
    jwt-expiration-seconds: 3600
    api-key: ${MODULO_API_KEY:mod_abcdef1234567890}
    encryption-key: ${MODULO_ENCRYPTION_KEY:docker-encryption-key}
    enable-csrf: true
    enable-cors: true
    max-login-attempts: 3
    account-lockout-duration-seconds: 900
  features:
    enable-blockchain: true
    enable-websockets: true
    enable-grpc: true
    enable-offline-mode: true
    enable-plugin-system: true
    enable-file-upload: true
    enable-search: true
    enable-notifications: true
  performance:
    max-file-size-mb: 10
    thread-pool-size: 10
    request-timeout-ms: 30000
    cache-size: 1000
    cache-ttl-seconds: 3600
  integrations:
    blockchain:
      network: ${BLOCKCHAIN_NETWORK:mainnet}
      rpc-url: ${BLOCKCHAIN_RPC_URL:http://localhost:8545}
      gas-limit: 8000000
      gas-price-wei: 20000000000
    ipfs:
      node-url: ${IPFS_NODE_URL:http://ipfs:5001}
      gateway-url: ${IPFS_GATEWAY_URL:http://ipfs:8080}
      enabled: ${IPFS_ENABLED:true}
      timeout-ms: 30000
      max-file-size-mb: 50
    external:
      api-timeout-ms: 10000
      max-retries: 3
      retry-delay-ms: 2000

---
spring:
  config:
    activate:
      on-profile: staging
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://db:5432/modulodb_staging}
    username: ${SPRING_DATASOURCE_USERNAME:postgres_staging}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  h2:
    console:
      enabled: false
  neo4j:
    uri: bolt://neo4j:7687
    authentication:
      username: neo4j
      password: stagingpassword123

# Management and actuator configuration for staging profile
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: always
  health:
    defaults:
      enabled: true

grpc:
  server:
    port: 9090
    enable-reflection: true

# Modulo application-specific configuration for staging profile
modulo:
  security:
    jwt-secret: ${MODULO_JWT_SECRET:dGVzdC1qd3Qtc2VjcmV0LWZvci12YWxpZGF0aW9uLXRlc3RpbmctMTIzNDU2Nzg5MA==}
    jwt-expiration-seconds: 3600
    api-key: ${MODULO_API_KEY:mod_staging_1234567890}
    encryption-key: ${MODULO_ENCRYPTION_KEY:staging-encryption-key}
    enable-csrf: true
    enable-cors: true
    max-login-attempts: 5
    account-lockout-duration-seconds: 1200
  features:
    enable-blockchain: true
    enable-websockets: true
    enable-grpc: true
    enable-offline-mode: false
    enable-plugin-system: true
    enable-file-upload: true
    enable-search: true
    enable-notifications: true
  performance:
    max-file-size-mb: 25
    thread-pool-size: 15
    request-timeout-ms: 45000
    cache-size: 2000
    cache-ttl-seconds: 7200
  integrations:
    blockchain:
      network: ${BLOCKCHAIN_NETWORK:mainnet}
      rpc-url: ${BLOCKCHAIN_RPC_URL:http://localhost:8545}
      gas-limit: 8000000
      gas-price-wei: 20000000000
    ipfs:
      node-url: ${IPFS_NODE_URL:http://ipfs:5001}
      gateway-url: ${IPFS_GATEWAY_URL:http://ipfs:8080}
      enabled: ${IPFS_ENABLED:true}
      timeout-ms: 30000
      max-file-size-mb: 50
    external:
      api-timeout-ms: 15000
      max-retries: 5
      retry-delay-ms: 3000

---
spring:
  config:
    activate:
      on-profile: oidc
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/modulo
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
logging:
  level:
    org.springframework.security: DEBUG