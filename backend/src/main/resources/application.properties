# Server Configuration
server.port=8081
server.servlet.context-path=/api

# Actuator Configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/actuator
management.endpoints.web.cors.allowed-origins=http://localhost:3000
management.server.port=8081

# OAuth2 Client Registrations
spring.security.oauth2.client.registration.google.client-id=test
spring.security.oauth2.client.registration.google.client-secret=test
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/api/login/oauth2/code/google

# Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# Azure OAuth2 Configuration
spring.security.oauth2.client.registration.azure.client-id=test
spring.security.oauth2.client.registration.azure.client-secret=test
spring.security.oauth2.client.registration.azure.scope=openid,profile,email
spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.azure.redirect-uri=http://localhost:8081/api/login/oauth2/code/azure

# Azure Provider Configuration
spring.security.oauth2.client.provider.azure.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.azure.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys
spring.security.oauth2.client.provider.azure.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.azure.user-name-attribute=name

# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Session Configuration
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=false
server.servlet.session.timeout=30m

# Database Configuration (using H2 for development)
spring.datasource.url=jdbc:h2:mem:modulodb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.h2.console.enabled=true
spring.jpa.show-sql=true

# File Upload Configuration
app.upload.dir=uploads
app.upload.max-file-size=10485760

# Azure Blob Storage Configuration
azure.storage.account-name=${AZURE_STORAGE_ACCOUNT_NAME:modulostorage}
azure.storage.connection-string=${AZURE_STORAGE_CONNECTION_STRING:}
azure.storage.account-key=${AZURE_STORAGE_ACCOUNT_KEY:}
azure.storage.use-managed-identity=${AZURE_STORAGE_USE_MANAGED_IDENTITY:true}
azure.storage.container-name=${AZURE_STORAGE_CONTAINER_NAME:attachments}
azure.storage.cdn-endpoint=${AZURE_CDN_ENDPOINT:}
azure.storage.max-file-size=${AZURE_STORAGE_MAX_FILE_SIZE:10485760}
azure.storage.allowed-content-types=${AZURE_STORAGE_ALLOWED_CONTENT_TYPES:image/jpeg,image/png,image/gif,application/pdf,text/plain,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document}

# Logging Configuration
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.boot.actuate=DEBUG
logging.level.com.modulo=DEBUG
logging.level.org.springframework.security.oauth2=TRACE

# Azure Application Insights Configuration
azure.application-insights.instrumentation-key=${APPLICATIONINSIGHTS_INSTRUMENTATION_KEY:}
azure.application-insights.connection-string=${APPLICATIONINSIGHTS_CONNECTION_STRING:}
azure.application-insights.web.enable-W3C=true
azure.application-insights.logging.level=INFO

# Azure Monitor Configuration
management.metrics.export.azure-monitor.enabled=true
management.metrics.export.azure-monitor.instrumentation-key=${APPLICATIONINSIGHTS_INSTRUMENTATION_KEY:}

# Health Check Configuration for Azure
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Container-specific settings
server.forward-headers-strategy=framework
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto

# Offline Database Configuration (SQLite) - Disabled for now
app.offline.database.enabled=false
app.offline.database.path=./data/offline.db

# Sync Configuration
app.offline.sync.enabled=true
app.offline.sync.interval=30000

# Blockchain Configuration
blockchain.network.rpc-url=http://localhost:8545
blockchain.network.chain-id=31337
blockchain.network.name=localhost
blockchain.contract.note-registry-address=0x0165878A594ca255338adfa4d48449f69242Eb8F
blockchain.contract.modulo-token-address=0x5FbDB2315678afecb367f032d93F642f64180aa3
blockchain.contract.note-monetization-address=0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512
blockchain.private-key=${BLOCKCHAIN_PRIVATE_KEY:ac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80}
blockchain.gas.price=20000000000
blockchain.gas.limit=3000000

# OpenTelemetry Configuration
otel.service.name=modulo-backend
otel.service.version=1.0.0
otel.resource.attributes=service.name=modulo-backend,service.version=1.0.0,deployment.environment=development

# OpenTelemetry Exporter Configuration
otel.traces.exporter=otlp
otel.exporter.otlp.endpoint=http://localhost:4317
otel.exporter.otlp.protocol=grpc
otel.exporter.otlp.compression=gzip

# Alternative Jaeger configuration (uncomment to use)
# otel.traces.exporter=jaeger
# otel.exporter.jaeger.endpoint=http://localhost:14250

# OpenTelemetry Sampling
otel.traces.sampler=traceidratio
otel.traces.sampler.arg=1.0

# OpenTelemetry Instrumentation
otel.instrumentation.spring-webmvc.enabled=true
otel.instrumentation.jdbc.enabled=true
otel.instrumentation.hibernate.enabled=true
otel.instrumentation.micrometer.enabled=true
otel.instrumentation.logback-mdc.enabled=true

# Propagation
otel.propagators=tracecontext,baggage,b3multi,b3single,jaeger,ottrace

# Metrics
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.tags.application=modulo-backend
management.metrics.tags.version=1.0.0