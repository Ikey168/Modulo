# Azure Production Configuration
# This file contains production-ready settings for Azure deployment

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Actuator Configuration for Azure Health Probes
management.endpoints.web.exposure.include=health,metrics,info,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator
management.server.port=8080

# Health Check Configuration for Azure
management.endpoint.health.probes.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# OAuth2 Client Registrations (Production)
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=${FRONTEND_URL:https://localhost:3000}/login/oauth2/code/google

# Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# Azure OAuth2 Configuration (Production)
spring.security.oauth2.client.registration.azure.client-id=${AZURE_CLIENT_ID:}
spring.security.oauth2.client.registration.azure.client-secret=${AZURE_CLIENT_SECRET:}
spring.security.oauth2.client.registration.azure.scope=openid,profile,email
spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.azure.redirect-uri=${FRONTEND_URL:https://localhost:3000}/login/oauth2/code/azure

# Azure Provider Configuration
spring.security.oauth2.client.provider.azure.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.azure.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys
spring.security.oauth2.client.provider.azure.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.azure.user-name-attribute=name

# CORS Configuration (Production)
spring.web.cors.allowed-origins=${FRONTEND_URL:https://localhost:3000}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Session Configuration (Production)
server.servlet.session.cookie.same-site=lax
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.timeout=30m

# Database Configuration (Production - use Azure SQL or PostgreSQL)
spring.datasource.url=${DATABASE_URL:jdbc:h2:mem:modulodb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.username=${DATABASE_USERNAME:sa}
spring.datasource.password=${DATABASE_PASSWORD:}
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false

# Azure Application Insights Configuration
azure.application-insights.instrumentation-key=${APPLICATIONINSIGHTS_INSTRUMENTATION_KEY:}
azure.application-insights.connection-string=${APPLICATIONINSIGHTS_CONNECTION_STRING:}
azure.application-insights.web.enable-W3C=true
azure.application-insights.logging.level=INFO

# Azure Monitor Configuration
management.metrics.export.azure-monitor.enabled=true
management.metrics.export.azure-monitor.instrumentation-key=${APPLICATIONINSIGHTS_INSTRUMENTATION_KEY:}

# Logging Configuration (Production)
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.boot.actuate=INFO
logging.level.com.modulo=INFO
logging.level.org.springframework.security.oauth2=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN

# Container-specific settings
server.forward-headers-strategy=framework
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=combined

# JPA Configuration
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-timeout=30000

# Security Configuration
server.error.include-message=never
server.error.include-stacktrace=never
server.error.include-binding-errors=never
server.error.include-exception=false
