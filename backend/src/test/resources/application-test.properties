# Test OAuth2 Client Registrations
spring.security.oauth2.client.registration.google.client-id=test-client-id
spring.security.oauth2.client.registration.google.client-secret=test-client-secret
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8081/api/login/oauth2/code/google

spring.security.oauth2.client.registration.azure.client-id=test-client-id
spring.security.oauth2.client.registration.azure.client-secret=test-client-secret
spring.security.oauth2.client.registration.azure.scope=openid,profile,email
spring.security.oauth2.client.registration.azure.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.azure.redirect-uri=http://localhost:8081/api/login/oauth2/code/azure

spring.security.oauth2.client.registration.test-client.client-id=test-client-id
spring.security.oauth2.client.registration.test-client.client-secret=test-client-secret
spring.security.oauth2.client.registration.test-client.scope=openid,profile,email
spring.security.oauth2.client.registration.test-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.test-client.redirect-uri=http://localhost:8081/api/login/oauth2/code/test-client

# Test Google Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=name
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs

# Test Client Provider Configuration
spring.security.oauth2.client.provider.test-client.authorization-uri=https://test.example.com/oauth2/authorize
spring.security.oauth2.client.provider.test-client.token-uri=https://test.example.com/oauth2/token
spring.security.oauth2.client.provider.test-client.user-info-uri=https://test.example.com/oauth2/userinfo
spring.security.oauth2.client.provider.test-client.user-name-attribute=sub

# Test Azure Provider Configuration
spring.security.oauth2.client.provider.azure.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.azure.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.azure.jwk-set-uri=https://login.microsoftonline.com/common/discovery/v2.0/keys
spring.security.oauth2.client.provider.azure.user-info-uri=https://graph.microsoft.com/oidc/userinfo
spring.security.oauth2.client.provider.azure.user-name-attribute=name

# Ensure Spring Security auto-configuration runs for tests
spring.autoconfigure.exclude=

# Use a different database for tests to avoid conflicts
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create-drop
spring.h2.console.enabled=false

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.boot=DEBUG
logging.level.org.springframework.beans.factory=DEBUG
logging.level.org.springframework.context=DEBUG