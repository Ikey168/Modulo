# Direnv configuration for Modulo local development
# This file defines environment-specific settings and secret loading

# Load encrypted secrets via SOPS
if [ -f .env.encrypted ]; then
    # Check if SOPS is available
    if command -v sops >/dev/null 2>&1; then
        # Decrypt and source the encrypted environment file
        eval "$(sops -d .env.encrypted | grep -v '^#' | grep -v '^$')"
        log_status "Loaded encrypted secrets from .env.encrypted"
    else
        log_error "SOPS not found. Install with: brew install sops"
        exit 1
    fi
fi

# Load smart contract secrets if in smart-contracts directory
if [ -f smart-contracts/.env.encrypted ]; then
    if command -v sops >/dev/null 2>&1; then
        eval "$(sops -d smart-contracts/.env.encrypted | grep -v '^#' | grep -v '^$')"
        log_status "Loaded smart contract secrets"
    fi
fi

# Development environment detection
if [ -z "$NODE_ENV" ]; then
    export NODE_ENV=development
fi

# Set development-specific defaults
export POSTGRES_HOST=${POSTGRES_HOST:-localhost}
export POSTGRES_PORT=${POSTGRES_PORT:-5432}
export POSTGRES_DB=${POSTGRES_DB:-modulodb}

# API URLs for development
export VITE_API_URL=${VITE_API_URL:-http://localhost:8080}
export API_BASE_URL=${API_BASE_URL:-http://localhost:8080}

# Java options for development
export JAVA_OPTS=${JAVA_OPTS:-"-Xmx1g -Xms512m"}

# Development flags
export DEBUG=${DEBUG:-false}
export SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}

# Docker development settings
export COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-modulo-dev}

# Security settings for development
export JWT_EXPIRATION=${JWT_EXPIRATION:-3600}
export SESSION_TIMEOUT=${SESSION_TIMEOUT:-1800}

# Logging level for development
export LOG_LEVEL=${LOG_LEVEL:-DEBUG}

# Network settings for smart contracts
export NETWORK=${NETWORK:-localhost}
export GAS_PRICE=${GAS_PRICE:-20000000000}

# Development helper functions
if command -v docker-compose >/dev/null 2>&1; then
    alias dc='docker-compose'
    alias dcup='docker-compose up -d'
    alias dcdown='docker-compose down'
    alias dclogs='docker-compose logs -f'
fi

# Development status
log_status "Environment: $NODE_ENV"
log_status "Database: $POSTGRES_HOST:$POSTGRES_PORT/$POSTGRES_DB"
log_status "API URL: $VITE_API_URL"

# Warn about missing secrets
if [ -z "$DATABASE_PASSWORD" ]; then
    log_error "DATABASE_PASSWORD not set. Check .env.encrypted file."
fi

if [ -z "$JWT_SECRET" ]; then
    log_error "JWT_SECRET not set. Check .env.encrypted file."
fi
